// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.174.0
//   protoc               v5.26.1
// source: category.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
export interface GetCategoryRequest {
  id?: number | undefined;
  code?: string | undefined;
  name?: string | undefined;
  link?: string | undefined;
  parentId?: number | undefined;
}

export interface GetCategoryByIdRequest {
  id: number;
}

export interface GetCategoryResponse {
  categories: Category[];
}

export interface CreateCategoryRequest {
  code: string;
  name: string;
  link: string;
  parentId?: number | undefined;
}

export interface Category {
  id: number;
  code: string;
  name: string;
  link?: string | undefined;
  parentId?: number | undefined;
}

export interface UpdateCategoryRequest {
  id: number;
  code: string;
  name: string;
  link?: string | undefined;
  parentId?: number | undefined;
}

export interface RemoveCategoryRequest {
  id: number;
}

export interface RemoveCategoryResponse {
  id: number;
}

export const CATEGORY_PACKAGE_NAME = "category";

export interface CategoryServiceClient {
  getCategory(request: GetCategoryRequest): Observable<GetCategoryResponse>;

  getCategoryById(request: GetCategoryByIdRequest): Observable<Category>;

  createCategory(request: CreateCategoryRequest): Observable<Category>;

  updateCategory(request: UpdateCategoryRequest): Observable<Category>;

  removeCategory(request: RemoveCategoryRequest): Observable<RemoveCategoryResponse>;
}

export interface CategoryServiceController {
  getCategory(
    request: GetCategoryRequest,
  ): Promise<GetCategoryResponse> | Observable<GetCategoryResponse> | GetCategoryResponse;

  getCategoryById(request: GetCategoryByIdRequest): Promise<Category> | Observable<Category> | Category;

  createCategory(request: CreateCategoryRequest): Promise<Category> | Observable<Category> | Category;

  updateCategory(request: UpdateCategoryRequest): Promise<Category> | Observable<Category> | Category;

  removeCategory(
    request: RemoveCategoryRequest,
  ): Promise<RemoveCategoryResponse> | Observable<RemoveCategoryResponse> | RemoveCategoryResponse;
}

export function CategoryServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "getCategory",
      "getCategoryById",
      "createCategory",
      "updateCategory",
      "removeCategory",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("CategoryService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("CategoryService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const CATEGORY_SERVICE_NAME = "CategoryService";
